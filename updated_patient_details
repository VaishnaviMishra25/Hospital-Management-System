package hospital.management.system;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.sql.*;

public class update_patient_details extends JFrame {

    update_patient_details() {
        setTitle("Update Patient Details");

        JPanel panel = new JPanel();
        panel.setBounds(5, 5, 940, 490);
        panel.setBackground(new Color(90, 156, 163));
        panel.setLayout(null);
        add(panel);

        ImageIcon imageIcon = new ImageIcon(ClassLoader.getSystemResource("icon/updated.png"));
        Image image = imageIcon.getImage().getScaledInstance(300, 300, Image.SCALE_DEFAULT);
        ImageIcon imageIcon1 = new ImageIcon(image);
        JLabel label = new JLabel(imageIcon1);
        label.setBounds(500, 60, 300, 300);
        panel.add(label);

        JLabel label1 = new JLabel("Update Patient Details");
        label1.setBounds(124, 11, 260, 25);
        label1.setFont(new Font("Tahoma", Font.BOLD, 20));
        label1.setForeground(Color.white);
        panel.add(label1);

        JLabel label2 = new JLabel("Name :");
        label2.setBounds(25, 88, 100, 14);
        label2.setFont(new Font("Tahoma", Font.PLAIN, 14));
        label2.setForeground(Color.white);
        panel.add(label2);

        Choice choice = new Choice();
        choice.setBounds(248, 85, 140, 25);
        panel.add(choice);

        JLabel label3 = new JLabel("Room Number :");
        label3.setBounds(25, 129, 200, 14);
        label3.setFont(new Font("Tahoma", Font.PLAIN, 14));
        label3.setForeground(Color.white);
        panel.add(label3);

        JTextField textFieldRoom = new JTextField();
        textFieldRoom.setBounds(248, 129, 140, 20);
        panel.add(textFieldRoom);

        JLabel label4 = new JLabel("In-Time :");
        label4.setBounds(25, 174, 100, 14);
        label4.setFont(new Font("Tahoma", Font.PLAIN, 14));
        label4.setForeground(Color.white);
        panel.add(label4);

        JTextField textFieldINTime = new JTextField();
        textFieldINTime.setBounds(248, 174, 140, 20);
        panel.add(textFieldINTime);

        JLabel label5 = new JLabel("Amount Paid (Rs) :");
        label5.setBounds(25, 216, 200, 14);
        label5.setFont(new Font("Tahoma", Font.PLAIN, 14));
        label5.setForeground(Color.white);
        panel.add(label5);

        JTextField textFieldAmount = new JTextField();
        textFieldAmount.setBounds(248, 216, 140, 20);
        panel.add(textFieldAmount);

        JLabel label6 = new JLabel("Pending Amount (Rs) :");
        label6.setBounds(25, 261, 180, 14);
        label6.setFont(new Font("Tahoma", Font.PLAIN, 14));
        label6.setForeground(Color.white);
        panel.add(label6);

        JTextField textFieldPending = new JTextField();
        textFieldPending.setBounds(248, 261, 140, 20);
        panel.add(textFieldPending);

        JButton updateButton = new JButton("Update");
        updateButton.setBounds(70, 320, 100, 30);
        panel.add(updateButton);

        JButton cancelButton = new JButton("Cancel");
        cancelButton.setBounds(200, 320, 100, 30);
        panel.add(cancelButton);

        // Load patient names
        try {
            conn c = new conn();
            ResultSet resultSet = c.statement.executeQuery("SELECT * FROM Patient_Info");
            while (resultSet.next()) {
                choice.add(resultSet.getString("Name"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        // Populate fields when name is selected
        choice.addItemListener(e -> {
            try {
                conn c = new conn();
                String selectedName = choice.getSelectedItem();
                ResultSet rs = c.statement.executeQuery("SELECT * FROM Patient_Info WHERE Name = '" + selectedName + "'");
                if (rs.next()) {
                    textFieldRoom.setText(rs.getString("Room_Number"));
                    textFieldINTime.setText(rs.getString("In_Time"));
                    textFieldAmount.setText(rs.getString("Amount_Paid"));
                    textFieldPending.setText(rs.getString("Pending_Amount"));
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        });

        // Update button functionality
        updateButton.addActionListener(e -> {
            try {
                conn c = new conn();
                String query = "UPDATE Patient_Info SET Room_Number = '" + textFieldRoom.getText() + "', In_Time = '" + textFieldINTime.getText() + "', Amount_Paid = '" + textFieldAmount.getText() + "', Pending_Amount = '" + textFieldPending.getText() + "' WHERE Name = '" + choice.getSelectedItem() + "'";
                c.statement.executeUpdate(query);
                JOptionPane.showMessageDialog(null, "Details Updated Successfully");
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        });

        cancelButton.addActionListener(e -> setVisible(false));

        setSize(950, 500);
        setLayout(null);
        setLocation(400, 250);
        setVisible(true);
    }

    public static void main(String[] args) {
        new update_patient_details();
    }
}
